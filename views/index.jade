include includes/head
div#fb-root

script(type="text/javascript")
	function render() {
		var dataurl = document.getElementById('draw').toDataURL();
		document.write(dataurl);
	}

div#container
	h1 Start Drawing!
	div#drawingdiv
		canvas#draw(width=550, height=350)	
	div#controls
		div#colorpicker
		div#text
		div#brushsizetext	
		div#brushslider
		button#download(type="button", onclick="render()") Download!
		button(type="button", onclick="login()") Login 
		button(type="button", onclick="logout()") Logout
		button#clearcanvas CLEAR IT
		button#colourtoggle Colours
	div#footer
		p darn simple drawing - alexander gamble 2011


script(type="text/javascript")
	FB.init({
			appId  : '194268853965392',
			status : true, // check login status
			cookie : true, // enable cookies to allow the server to access the session
			xfbml  : true,  // parse XFBML
		});



script(type="text/javascript")
	
	var x;
	var y;
	var size;
	var color;
	
	//begin facebook stuff
	
	function login(){
		FB.login(handleSessionResponse);
	}
	
	function logout(){
		FB.logout(handleSessionResponse);
	}
	
	function handleSessionResponse(response) {
	// if we dont have a session, just hide the user info
	if (!response.session) {
		$("#download").text("NO");
		return;
	}

	// if we have a session, query for the user's profile picture and name
	FB.api(
		{
			method: 'fql.query',
			query: 'SELECT name, pic FROM profile WHERE id=' + FB.getSession().uid
		},
			function(response) {
			var user = response[0];
		document.write(user.name);
			}
		);
	}

	//end facebook stuff

	//color picker
	$('#colorpicker').farbtastic();
	
	//function to be run to update text saying what size the brush is
	function sliderupdate(){
		size = $("#brushslider").slider("value");
		$("#brushsizetext").text("Brush Size: "+ size);	
	}

	$('#colourtoggle').click(function() {
			$('#colorpicker').slideDown('slow', function() {
	// Animation complete.
			});
	});
	
	//slider function
	$( "#brushslider" ).slider({
		min:0,
		max:101,
		value:20,
		slide: function() {
			sliderupdate();
		}
	});
	
	//some now.js magic SHHH
	
	$("#clearcanvas").click(function(){
		$("canvas#draw").clearCanvas();
	});
	
	//now.recclearcanvas = function(){
	//	$("canvas#draw").clearCanvas();
	
	
	//end nowjs clearcanvas magic
	
	//run this so it works on page load
	sliderupdate();
	//the drawing circles for painting thing
	function circle(color, x, y, size) {
		$("canvas#draw").drawEllipse({
			fillStyle: color,
			x: x,
			y: y,
			width: size,
			height: size,
			fromCenter: true
		});
	};
	
	//old code which simply creates one circle instead of the many BELOW!!!
	/*
	$("#draw").bind('click',function(e){
	
			x = e.pageX - this.offsetLeft;
			y = e.pageY - this.offsetTop;
		
		$("#text").text(x +', '+y);
		
		circle(x, y);
	});
	*/
	
	//sort of fixes this pointer changes to text selector on paint issue....
	$("#draw").onselectstart = function () { return false; } // ie
	$("#draw").onmousedown = function () { return false; } //mozilla based browsers (nothing for chrome yet)
	
	//begin painting
	$("#draw").mousedown(function (e) {

		// creating preliminary circle to start painting
		x = e.pageX - this.offsetLeft;
		y = e.pageY - this.offsetTop;
		
		$("h1").slideUp('slow', function() {});
		
		//now.x = x;
		//now.y = y;
		//now.size = size;
		//now.color = color;
		
		//when the mouse is pushed, it calls the color selected from farbtastic
		color = $.farbtastic("#colorpicker").color;
		
		//paints the first circle with this color!
		circle(color, x, y, size);
		
		// now.sendpaint(now.color, now.x, now.y, now.size);
		
		$('#colorpicker').slideUp('slow', function() {});
			
		//this calls the mousemove event to live as a result of pressing the mouse down
		$("#draw").live('mousemove', function(e) {
			// checking for where the cursor is at 'event' page context minus object context
			x = e.pageX - this.offsetLeft;
			y = e.pageY - this.offsetTop;
			
			//now.x = x;
			//now.y = y;
			
			//now.sendpaint(now.x, now.y);
			
			circle(color, x, y, size);

			//to check co ordinates are working
			//$("#text").text(x + ', ' + y);

			})	
	})
	/*
	now.receivepaint =  function(){
		circle(now.color, now.x, now.y, now.size);
	}
	*/
	
	//this is the universal killswitch for the painting. when it is done, simply kill the mousemove function	
	$(document).mouseup(function(){
		$("#draw").die('mousemove');
		});		




	
